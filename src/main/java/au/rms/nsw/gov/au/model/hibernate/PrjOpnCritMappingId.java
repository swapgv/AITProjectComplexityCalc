package au.rms.nsw.gov.au.model.hibernate;
// Generated 14/10/2016 12:10:24 PM by Hibernate Tools 5.2.0.Beta1

import java.math.BigDecimal;
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * PrjOpnCritMappingId generated by hbm2java
 */
@Embeddable
public class PrjOpnCritMappingId implements java.io.Serializable {

	private BigDecimal operationId;
	private BigDecimal prjSrvcMappingId;

	public PrjOpnCritMappingId() {
	}

	public PrjOpnCritMappingId(BigDecimal operationId, BigDecimal prjSrvcMappingId) {
		this.operationId = operationId;
		this.prjSrvcMappingId = prjSrvcMappingId;
	}

	@Column(name = "OPERATION_ID", nullable = false, precision = 22, scale = 0)
	public BigDecimal getOperationId() {
		return this.operationId;
	}

	public void setOperationId(BigDecimal operationId) {
		this.operationId = operationId;
	}

	@Column(name = "PRJ_SRVC_MAPPING_ID", nullable = false, precision = 22, scale = 0)
	public BigDecimal getPrjSrvcMappingId() {
		return this.prjSrvcMappingId;
	}

	public void setPrjSrvcMappingId(BigDecimal prjSrvcMappingId) {
		this.prjSrvcMappingId = prjSrvcMappingId;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof PrjOpnCritMappingId))
			return false;
		PrjOpnCritMappingId castOther = (PrjOpnCritMappingId) other;

		return ((this.getOperationId() == castOther.getOperationId()) || (this.getOperationId() != null
				&& castOther.getOperationId() != null && this.getOperationId().equals(castOther.getOperationId())))
				&& ((this.getPrjSrvcMappingId() == castOther.getPrjSrvcMappingId())
						|| (this.getPrjSrvcMappingId() != null && castOther.getPrjSrvcMappingId() != null
								&& this.getPrjSrvcMappingId().equals(castOther.getPrjSrvcMappingId())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getOperationId() == null ? 0 : this.getOperationId().hashCode());
		result = 37 * result + (getPrjSrvcMappingId() == null ? 0 : this.getPrjSrvcMappingId().hashCode());
		return result;
	}

}
